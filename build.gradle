/*
 * Copyright (c) 2016, marlonlom
 *
 * Licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    boolean android = project.property('android')
    String kotlin_version = project.property('kotlin_version')
    ext.kotlin_version = kotlin_version
    repositories {
        if (android) {
            google()
        }
        jcenter()
    }
    dependencies {
        if (android) {
            classpath "com.android.tools.build:gradle:${android_gradle_version}"
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        // classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id("java-library")
    id("org.jetbrains.kotlin.jvm") version "$kotlin_version"
    id("org.jetbrains.dokka") version "$dokka_version"
    id("maven-publish")
}

wrapper {
    version = '6.8.2'
}

boolean android = project.property('android')
int java_release_version = project.property('java_release_version')
String mavenProjectGroup = project.property('mavenProjectGroup')
String projectVersion = project.property('projectVersion')

group = mavenProjectGroup
version = projectVersion

allprojects {

    repositories {
        if (android) {
            google()
        }
        jcenter()
    }

    group = mavenProjectGroup
    version = projectVersion

    tasks.withType(Jar) {
        manifest {
            attributes(
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.version,
                    "Automatic-Module-Name": project.group + "." + project.name.replace('_', '.'),
                    // Custom (non-standard) attribute
                    "Maven-Group": project.group
            )
        }
        dependsOn("generatePomFileForMavenPublication")
        into("META-INF/maven/${project.group}/${project.name}") {
            from("$buildDir/publications/maven/pom-default.xml")
            rename(".*", "pom.xml")
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = java_release_version
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    implementation(project(":ta_library"))
}
